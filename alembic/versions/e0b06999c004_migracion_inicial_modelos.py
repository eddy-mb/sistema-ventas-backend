"""migracion inicial modelos

Revision ID: e0b06999c004
Revises:
Create Date: 2025-04-08 00:37:17.393044

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e0b06999c004"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permisos",
        sa.Column("estado_audit", sa.Boolean(), nullable=False),
        sa.Column("usuario_creacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_creacion", sa.DateTime(), nullable=False),
        sa.Column("usuario_modificacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_modificacion", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("module", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_permisos_code"), "permisos", ["code"], unique=False, schema="auth"
    )
    op.create_index(
        op.f("ix_auth_permisos_estado_audit"),
        "permisos",
        ["estado_audit"],
        unique=False,
        schema="auth",
    )
    op.create_table(
        "roles",
        sa.Column("estado_audit", sa.Boolean(), nullable=False),
        sa.Column("usuario_creacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_creacion", sa.DateTime(), nullable=False),
        sa.Column("usuario_modificacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_modificacion", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name",
            sa.Enum("ADMINISTRADOR", "GERENTE", "COUNTER", "GESTOR_PAQUETES", name="roles"),
            nullable=False,
        ),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("is_system_role", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_roles_estado_audit"), "roles", ["estado_audit"], unique=False, schema="auth"
    )
    op.create_index(op.f("ix_auth_roles_name"), "roles", ["name"], unique=False, schema="auth")
    op.create_table(
        "usuarios",
        sa.Column("estado_audit", sa.Boolean(), nullable=False),
        sa.Column("usuario_creacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_creacion", sa.DateTime(), nullable=False),
        sa.Column("usuario_modificacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_modificacion", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("full_name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "ACTIVE",
                "INACTIVE",
                "LOCKED",
                "PASSWORD_EXPIRED",
                "PENDING_ACTIVATION",
                name="userstatus",
            ),
            nullable=False,
        ),
        sa.Column("failed_login_attempts", sa.Integer(), nullable=False),
        sa.Column("hashed_password", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("password_change_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_usuarios_email"), "usuarios", ["email"], unique=False, schema="auth"
    )
    op.create_index(
        op.f("ix_auth_usuarios_estado_audit"),
        "usuarios",
        ["estado_audit"],
        unique=False,
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_usuarios_username"), "usuarios", ["username"], unique=False, schema="auth"
    )
    op.create_table(
        "clientes",
        sa.Column("estado_audit", sa.Boolean(), nullable=False),
        sa.Column("usuario_creacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_creacion", sa.DateTime(), nullable=False),
        sa.Column("usuario_modificacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_modificacion", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("nombre", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("apellidos", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column(
            "tipo_documento",
            sa.Enum("CARNET_IDENTIDAD", "PASAPORTE", "OTRO", name="tipodocumento"),
            nullable=False,
        ),
        sa.Column("numero_documento", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("direccion", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
        sa.Column("telefono", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
        sa.Column("fecha_nacimiento", sa.Date(), nullable=True),
        sa.Column("nacionalidad", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
        sa.Column("preferencias", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.Column("estado", sa.Enum("ACTIVO", "INACTIVO", name="estadocliente"), nullable=False),
        sa.Column("fecha_registro", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="cliente",
    )
    op.create_index(
        op.f("ix_cliente_clientes_estado_audit"),
        "clientes",
        ["estado_audit"],
        unique=False,
        schema="cliente",
    )
    op.create_table(
        "log_auditoria",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("fecha_hora", sa.DateTime(), nullable=False),
        sa.Column("usuario_id", sa.Integer(), nullable=True),
        sa.Column("tipo_accion", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("modulo", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("entidad", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("entidad_id", sa.Integer(), nullable=True),
        sa.Column("detalles", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("ip_origen", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("resultado", sa.Boolean(), nullable=False),
        sa.Column("descripcion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["usuario_id"],
            ["auth.usuarios.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="auditoria",
    )
    op.create_index(
        op.f("ix_auditoria_log_auditoria_entidad"),
        "log_auditoria",
        ["entidad"],
        unique=False,
        schema="auditoria",
    )
    op.create_index(
        op.f("ix_auditoria_log_auditoria_entidad_id"),
        "log_auditoria",
        ["entidad_id"],
        unique=False,
        schema="auditoria",
    )
    op.create_index(
        op.f("ix_auditoria_log_auditoria_modulo"),
        "log_auditoria",
        ["modulo"],
        unique=False,
        schema="auditoria",
    )
    op.create_index(
        op.f("ix_auditoria_log_auditoria_tipo_accion"),
        "log_auditoria",
        ["tipo_accion"],
        unique=False,
        schema="auditoria",
    )
    op.create_index(
        op.f("ix_auditoria_log_auditoria_usuario_id"),
        "log_auditoria",
        ["usuario_id"],
        unique=False,
        schema="auditoria",
    )
    op.create_table(
        "rol_permisos",
        sa.Column("estado_audit", sa.Boolean(), nullable=False),
        sa.Column("usuario_creacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_creacion", sa.DateTime(), nullable=False),
        sa.Column("usuario_modificacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_modificacion", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["auth.permisos.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["auth.roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_rol_permisos_estado_audit"),
        "rol_permisos",
        ["estado_audit"],
        unique=False,
        schema="auth",
    )
    op.create_table(
        "usuario_roles",
        sa.Column("estado_audit", sa.Boolean(), nullable=False),
        sa.Column("usuario_creacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_creacion", sa.DateTime(), nullable=False),
        sa.Column("usuario_modificacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_modificacion", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["auth.roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth.usuarios.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_usuario_roles_estado_audit"),
        "usuario_roles",
        ["estado_audit"],
        unique=False,
        schema="auth",
    )
    op.create_table(
        "contactos_emergencia",
        sa.Column("estado_audit", sa.Boolean(), nullable=False),
        sa.Column("usuario_creacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_creacion", sa.DateTime(), nullable=False),
        sa.Column("usuario_modificacion", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("fecha_modificacion", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("nombre", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("relacion", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("telefono", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("cliente_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cliente_id"],
            ["cliente.clientes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="cliente",
    )
    op.create_index(
        op.f("ix_cliente_contactos_emergencia_estado_audit"),
        "contactos_emergencia",
        ["estado_audit"],
        unique=False,
        schema="cliente",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_cliente_contactos_emergencia_estado_audit"),
        table_name="contactos_emergencia",
        schema="cliente",
    )
    op.drop_table("contactos_emergencia", schema="cliente")
    op.drop_index(
        op.f("ix_auth_usuario_roles_estado_audit"), table_name="usuario_roles", schema="auth"
    )
    op.drop_table("usuario_roles", schema="auth")
    op.drop_index(
        op.f("ix_auth_rol_permisos_estado_audit"), table_name="rol_permisos", schema="auth"
    )
    op.drop_table("rol_permisos", schema="auth")
    op.drop_index(
        op.f("ix_auditoria_log_auditoria_usuario_id"),
        table_name="log_auditoria",
        schema="auditoria",
    )
    op.drop_index(
        op.f("ix_auditoria_log_auditoria_tipo_accion"),
        table_name="log_auditoria",
        schema="auditoria",
    )
    op.drop_index(
        op.f("ix_auditoria_log_auditoria_modulo"), table_name="log_auditoria", schema="auditoria"
    )
    op.drop_index(
        op.f("ix_auditoria_log_auditoria_entidad_id"),
        table_name="log_auditoria",
        schema="auditoria",
    )
    op.drop_index(
        op.f("ix_auditoria_log_auditoria_entidad"), table_name="log_auditoria", schema="auditoria"
    )
    op.drop_table("log_auditoria", schema="auditoria")
    op.drop_index(op.f("ix_cliente_clientes_estado_audit"), table_name="clientes", schema="cliente")
    op.drop_table("clientes", schema="cliente")
    op.drop_index(op.f("ix_auth_usuarios_username"), table_name="usuarios", schema="auth")
    op.drop_index(op.f("ix_auth_usuarios_estado_audit"), table_name="usuarios", schema="auth")
    op.drop_index(op.f("ix_auth_usuarios_email"), table_name="usuarios", schema="auth")
    op.drop_table("usuarios", schema="auth")
    op.drop_index(op.f("ix_auth_roles_name"), table_name="roles", schema="auth")
    op.drop_index(op.f("ix_auth_roles_estado_audit"), table_name="roles", schema="auth")
    op.drop_table("roles", schema="auth")
    op.drop_index(op.f("ix_auth_permisos_estado_audit"), table_name="permisos", schema="auth")
    op.drop_index(op.f("ix_auth_permisos_code"), table_name="permisos", schema="auth")
    op.drop_table("permisos", schema="auth")
    # ### end Alembic commands ###
